name: Build and Register

on:
  push:
    branches: [master, alpha, beta, next]
  pull_request:

jobs:
  build-backend:
    name: Build backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha || github.sha }}

      - name: Set up Node.js v14
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Set up Yarn cache
        uses: c-hive/gha-yarn-cache@v1

      - name: Install backend dependencies
        run: yarn workspace @domifa/backend install --frozen-lockfile --prefer-offline

      - name: Build backend
        run: yarn workspace @domifa/backend build

      - name: Archive backend build
        uses: actions/upload-artifact@v2
        with:
          name: backend-dist
          path: packages/backend/dist

  build-frontend:
    name: Build front-end
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha || github.sha }}

      - name: Set up Node.js v14
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Set up Yarn cache
        uses: c-hive/gha-yarn-cache@v1

      - name: Install front-end dependencies
        run: yarn --cwd packages/frontend install --frozen-lockfile --prefer-offline

      - name: Build front-end
        run: yarn --cwd packages/frontend build

      - name: Archive front-end build
        uses: actions/upload-artifact@v2
        with:
          name: frontend-dist
          path: packages/frontend/dist

  register-backend:
    name: Register backend
    runs-on: ubuntu-latest
    needs: build-backend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha || github.sha }}

      - name: Download backend build
        uses: actions/download-artifact@v2
        with:
          name: backend-dist
          path: packages/backend/dist

      - name: Create image labels and tags
        id: docker_meta
        uses: "crazy-max/ghaction-docker-meta@2e1a5c7fa42123697f82d479b551a1bbdb1bef88"
        with:
          images: ghcr.io/socialgouv/domifa/backend
          labels: |
            org.opencontainers.image.title=backend
            org.opencontainers.image.documentation=https://github.com/SocialGouv/domifa/tree/${{ github.event.pull_request.head.sha }}
          tags: |
            type=sha
            type=raw,value=sha-${{ github.event.pull_request.head.sha }}
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Set up Buildx
        id: buildx
        uses: docker/setup-buildx-action@master
        with:
          install: true

      - name: Registry authentication
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.SOCIALGROOVYBOT_NAME }}
          password: ${{ secrets.SOCIALGROOVYBOT_GHCR_PAT }}

      - name: Image build and register
        uses: docker/build-push-action@v2
        with:
          context: .
          push: "true"
          file: packages/backend/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          tags: "${{ steps.docker_meta.outputs.tags }}"
          # cache-to: "type=local,dest=/tmp/.buildx-cache"
          # cache-from: "type=local,src=/tmp/.buildx-cache"
          labels: "${{ steps.docker_meta.outputs.labels }}"

  register-frontend:
    name: Register front-end
    runs-on: ubuntu-latest
    needs: build-frontend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha || github.sha }}

      - name: Download front-end build
        uses: actions/download-artifact@v2
        with:
          name: frontend-dist
          path: packages/frontend/dist

      - name: Create image labels and tags
        id: docker_meta
        uses: "crazy-max/ghaction-docker-meta@2e1a5c7fa42123697f82d479b551a1bbdb1bef88"
        with:
          images: ghcr.io/socialgouv/domifa/frontend
          labels: |
            org.opencontainers.image.title=frontend
            org.opencontainers.image.documentation=https://github.com/SocialGouv/domifa/tree/${{ github.event.pull_request.head.sha }}
          tags: |
            type=sha
            type=raw,value=sha-${{ github.event.pull_request.head.sha }}
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Set up Buildx
        id: buildx
        uses: docker/setup-buildx-action@master
        with:
          install: true

      - name: Registry authentication
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.SOCIALGROOVYBOT_NAME }}
          password: ${{ secrets.SOCIALGROOVYBOT_GHCR_PAT }}

      - name: Image build and register
        uses: docker/build-push-action@v2
        with:
          context: .
          push: "true"
          file: packages/frontend/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          tags: "${{ steps.docker_meta.outputs.tags }}"
          # cache-to: "type=local,dest=/tmp/.buildx-cache"
          # cache-from: "type=local,src=/tmp/.buildx-cache"
          labels: "${{ steps.docker_meta.outputs.labels }}"

  deploy:
    name: Trigger deployment
    runs-on: ubuntu-latest
    needs: [register-frontend, register-backend]
    steps:
      - name: Trigger deployment
        uses: wei/curl@v1
        with:
          args: -F token=${{ secrets.GITLAB_PIPELINE_TRIGGER_TOKEN }} -F "ref=${{ github.head_ref }}" -F "variables[DEPLOY]=true" https://gitlab.factory.social.gouv.fr/api/v4/projects/64/trigger/pipeline
