backend: &backendPreprod
  annotations:
    oblik.socialgouv.io/min-limit-cpu: "3"
    oblik.socialgouv.io/min-request-cpu: "1"
    oblik.socialgouv.io/min-request-memory: "3Gi"
  host: "api-{{ .Values.global.host }}"
  autoscale:
    minReplicas: 1
    maxReplicas: 3
  envFrom:
    - secretRef:
        name: "{{ .Values.global.pgSecretName }}"
    - secretRef:
        name: backend-sealed-secret
    - configMapRef:
        name: backend-configmap
  env: &backendEnv
    - name: S3_BUCKET_ENDPOINT
      valueFrom:
        secretKeyRef:
          name: domifa-dev-app-access-key
          key: bucket_endpoint
    - name: S3_BUCKET_NAME
      valueFrom:
        secretKeyRef:
          name: domifa-dev-app-access-key
          key: bucket_name
    - name: S3_BUCKET_REGION
      valueFrom:
        secretKeyRef:
          name: domifa-dev-app-access-key
          key: bucket_region
    - name: S3_BUCKET_ACCESS_KEY
      valueFrom:
        secretKeyRef:
          name: domifa-dev-app-access-key
          key: bucket_access_key
    - name: S3_BUCKET_SECRET_KEY
      valueFrom:
        secretKeyRef:
          name: domifa-dev-app-access-key
          key: bucket_secret_key
    - name: S3_BUCKET_ROOT_DIR
      value: preprod/files

backend-export:
  <<: *backendPreprod
  annotations:
    oblik.socialgouv.io/min-request-cpu: "2"
    oblik.socialgouv.io/min-request-memory: 3Gi
    oblik.socialgouv.io/request-apply-target: peak
  ingress:
    paths:
      - /export
      - /admin/structures/export
      - /stats
      - /stats/home

backend-cron:
  envFrom:
    - secretRef:
        name: "{{ .Values.global.pgSecretName }}"
    - secretRef:
        name: backend-sealed-secret
    - configMapRef:
        name: backend-configmap
  env: *backendEnv

frontend:
  host: "{{ .Values.global.host }}"

portail-admins:
  host: "admin-{{ .Values.global.host }}"

portail-usagers:
  host: "mon-{{ .Values.global.host }}"

jobs-restore-anonymous-prod:
  ~chart: jobs
  enabled: false
  retry: 0
  runs:
    restore-anonymization:
      memoryLimit: 4Gi
      cpuLimit: "4"
      memoryRequest: 4Gi
      cpuRequest: "2"
      checkout: true
      image: ghcr.io/socialgouv/docker/s3-client:sha-d43374e
      envFrom:
        - secretRef:
            name: domifa-dev-backups-access-key
        - secretRef:
            name: anonymous-db-sealed-secret
      env:
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: domifa-dev-backups-access-key
              key: bucket_access_key
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: domifa-dev-backups-access-key
              key: bucket_secret_key
        - name: AWS_DEFAULT_REGION
          valueFrom:
            secretKeyRef:
              name: domifa-dev-backups-access-key
              key: bucket_region
        - name: AWS_ENDPOINT_URL
          valueFrom:
            secretKeyRef:
              name: domifa-dev-backups-access-key
              key: bucket_endpoint
        - name: PGUSER
          valueFrom:
            secretKeyRef:
              name: pg-superuser
              key: username
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: pg-superuser
              key: password
        - name: PGUSERAPP
          valueFrom:
            secretKeyRef:
              name: pg-app
              key: PGUSER
      run: |
        set -e
        root_path=domifa-dev-backups/anonymizer/pg_dumps
        last_dir=$(aws s3 ls s3://$root_path --recursive | awk '{print $4}' | cut -d "/" -f3 | tail -n 1)
        echo "Restoring $last_dir"
        aws s3 cp --recursive s3://$root_path/$last_dir /tmp/dump/$last_dir
        export PGSSLMODE=disable
        pg_restore --clean --if-exists --no-owner --role=$PGUSERAPP --no-acl --verbose /tmp/dump/$last_dir --dbname $PGDATABASE
