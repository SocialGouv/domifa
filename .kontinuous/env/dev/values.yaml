pg:
  # this force ce PG cluster to be destroyed on redeploys
  ~preDeploy.cleaner:
    match:
      kind: Cluster
    value: true

jobs:
  runs:
    build-backend:
      with:
        buildArgs:
          DOMIFA_BACKEND_URL: https://api-{{ .Values.global.host }}/
          DOMIFA_PORTAIL_ADMINS_URL: https://admin-{{ .Values.global.host }}/
          DOMIFA_PORTAIL_USAGERS_URL: https://mon-{{ .Values.global.host }}/
          DOMIFA_FRONTEND_URL: https://{{ .Values.global.host }}/
    seed:
      ~needs: [backend] # need backend to run migrations
      use: seed-db
      with:
        seedPath: _scripts/db/dumps/domifa_test.postgres.truncate-restore-data-only.sql

jobs-restore-anonymization:
  ~chart: jobs
  enabled: false
  runs:
    restore-anonymization:
      checkout: true
      image: ghcr.io/socialgouv/docker/s3-client:sha-d43374e
      envFrom:
        - secretRef:
            name: domifa-dev-backups-access-key
        - secretRef:
            name: pg-app
      run: |
        root_path=domifa-dev-backups/anonymizer/pg_dumps
        last_dir=aws s3 ls s3://$root_path | tail -n 1
        echo "Restoring $last_dir"
        aws s3 cp --recursive s3://$root_path/$last_dir /tmp/dump/$last_dir
        pg_restore --clean --if-exists --no-owner --no-acl --verbose /tmp/dump/$last_dir

backend:
  ~needs: [build-backend, pg]
  env: &backendEnv
    - name: S3_BUCKET_ENDPOINT
      valueFrom:
        secretKeyRef:
          name: domifa-dev-app-access-key
          key: bucket_endpoint
    - name: S3_BUCKET_NAME
      valueFrom:
        secretKeyRef:
          name: domifa-dev-app-access-key
          key: bucket_name
    - name: S3_BUCKET_REGION
      valueFrom:
        secretKeyRef:
          name: domifa-dev-app-access-key
          key: bucket_region
    - name: S3_BUCKET_ACCESS_KEY
      valueFrom:
        secretKeyRef:
          name: domifa-dev-app-access-key
          key: bucket_access_key
    - name: S3_BUCKET_SECRET_KEY
      valueFrom:
        secretKeyRef:
          name: domifa-dev-app-access-key
          key: bucket_secret_key
    - name: S3_BUCKET_ROOT_DIR
      value: review-branch/{{ .Values.global.branchSlug32  }}/files

backend-cron:
  ~needs: [backend]
  env: *backendEnv
