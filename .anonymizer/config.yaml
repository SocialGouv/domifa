log:
  level: debug
  format: text

storage:
  type: "{{type}}"
  directory:
    path: "{{tmp}}"
  s3:
    endpoint: "{{bucket_endpoint}}"
    bucket: "{{bucket_name}}"
    region: "{{bucket_region}}"
    access_key_id: "{{bucket_access_key}}"
    secret_access_key: "{{bucket_secret_key}}"
    prefix: "/anonymizer/pg_dumps"
    # force_path_style: true

dump:
  transformation:
    - schema: public
      name: usager
      transformers:
        - name: SetNull
          params:
            column: email
        - name: RandomFirstName
          params:
            column: prenom
        - name: Json
          params:
            column: telephone
            operations:
              - operation: set
                path: countryCode
                value: fr
              - operation: set
                path: numero
                value: ""
        - name: SetNull
          params:
            column: pinnedNote
        - name: RandomLastName
          params:
            column: nom
        - name: RandomLastName
          params:
            column: surnom
            keep_null: true
        - name: RealAddress
          params:
            columns:
              - name: villeNaissance
                template: "{{.City}}"
        - name: Json
          params:
            column: decision
            operations:
              - operation: set
                path: motifDetails
                value: null
              - operation: set
                path: orientationDetails
                value: null
              - operation: set
                path: userName
                value_template: "{{ quote fakerName }}"
              - operation: set
                path: userId
                value_template: "{{ randomInt 0 1000000000}}"
              - operation: set
                path: uuid
                value_template: "{{ quote fakerUUID }}"
        - name: "Cmd"
          # --- historique
          params:
            driver:
              name: "json"
            validate: true
            timeout: 3600s
            executable: "node"
            args:
              - "./dist/usager--historique.js"
            columns:
              - name: "historique"
                skip_on_null_input: true
        # - name: "Cmd"
        #   # --- ayantsDroits
        #   params:
        #     driver:
        #       name: "json"
        #     validate: true
        #     timeout: 3600s
        #     executable: "node"
        #     args:
        #       - "./dist/usager--ayants-droits.js"
        #     columns:
        #       - name: "ayantsDroits"
        #         skip_on_null_input: true
        - name: Json
          params:
            column: import
            keep_null: true
            operations:
              - operation: set
                path: date
                value_template: >
                  {{ quote (truncateDate "month" (mustToDate "2006-01-02" (split "T" (.GetColumnValue "import").date)._0)) }}
              - operation: set
                path: userId
                value_template: "{{ randomInt 0 1000000000 }}"
              - operation: set
                path: userName
                value_template: "{{ quote fakerName }}"
        - name: TemplateRecord
          params:
            # --- rdv
            template: >
              {{ $rdv := .GetColumnValue "rdv" }}

              {{ if isNull $rdv }}
                {{ .SetColumnValue "rdv" null }}

              {{ else }}
                {{ $dateRdv := $rdv.undefined }}
                {{ if and (isNotNull $rdv) (eq (kindOf $rdv.dateRdv) "string") }}
                  {{ $dateRdv = truncateDate "month" (mustToDate "2006-01-02" (split "T" $rdv.dateRdv)._0) }}
                {{ end }}

                {{ $userId := randomInt 0 1000000000 }}
                {{ $userName := fakerName }}

                {{ .SetColumnValue "rdv" (toJson (dict "userId" $userId "userName" $userName "dateRdv" $dateRdv )) }}

              {{ end }}
        - name: Replace
          params:
            column: migrated
            value: true
            keep_null: false
        # # - name: TemplateRecord
        # #   params:
        # #     # --- options
        # #     template: >
        # #        {{ $options := .GetColumnValue "options" }}

        # #        {{ if isNull $options }}
        # #          {{ .SetColumnValue "options" null }}

        # #        {{ else }}
        # #          {{ $procurations := $options.procurations }}
        # #          {{ if isNotNull $procurations }}
        # #            {{ $dateRdv = truncateDate "month" (mustToDate "2006-01-02" (split "T" $rdv.dateRdv)._0) }}
        # #            {{Â $options.procurations = }}
        # #          {{ end }}

        # #          {{ $userId := randomInt 0 1000000000 }}
        # #          {{ $userName := fakerName }}

        # #          {{ .SetColumnValue "rdv" (toJson (dict "userId" $userId "userName" $userName "dateRdv" $dateRdv )) }}

        # #        {{ end }}

    - schema: public
      name: structure
      transformers:
        - name: "Template"
          params:
            column: "email"
            template: >
              {{ printf "structure-%d@domifa-fake.fabrique.social.gouv.fr" (.GetColumnValue "id") }}
        - name: SetNull
          params:
            column: token
        - name: SetNull
          params:
            column: tokenDelete
        - name: SetNull
          params:
            column: hardReset
        - name: Json
          params:
            column: telephone
            operations:
              - operation: set
                path: countryCode
                value: "fr"
              - operation: set
                path: numero
                value: "0600000000"
        - name: Json
          params:
            column: responsable
            operations:
              - operation: set
                path: nom
                value_template: "{{ quote fakerFirstLastName }}"
              - operation: set
                path: prenom
                value_template: "{{ quote fakerFirstName }}"

    - schema: public
      name: user_structure
      transformers:
        - name: RandomFirstName
          params:
            column: prenom
        - name: RandomLastName
          params:
            column: nom
        - name: "Cmd"
          params:
            driver:
              name: "json"
            validate: true
            timeout: 3600s
            executable: "node"
            args:
              - "./dist/user-structure--fonction.js"
            columns:
              - name: "fonction"
                skip_on_null_input: true
        - name: "Template"
          params:
            column: "email"
            template: >
              {{ printf "%s-%d-%d@domifa-fake.fabrique.social.gouv.fr" (.GetColumnValue "role") (.GetColumnValue "structureId") (.GetColumnValue "id") }}

    - schema: public
      name: interactions
      transformers:
        - name: Replace
          params:
            column: content
            value: "Random content"
        - name: "Template"
          params:
            column: "userName"
            template: >
              {{ printf "%s %s" fakerFirstName fakerFirstLastName }}
