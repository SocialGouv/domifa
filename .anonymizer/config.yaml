common:
  tmp_dir: "/tmp"

log:
  level: "debug"
  format: "text"

storage:
  type: "{{type}}"
  directory:
    path: "{{tmp}}"
  s3:
    endpoint: "{{bucket_endpoint}}"
    bucket: "{{bucket_name}}"
    region: "{{bucket_region}}"
    access_key_id: "{{bucket_access_key}}"
    secret_access_key: "{{bucket_secret_key}}"
    prefix: "/anonymizer/pg_dumps"
    # force_path_style: true

dump:

  transformation:
    - schema: "public"
      name: "usager"
      transformers:
        - name: "SetNull"
          params:
            column: "email"
        - name: "RandomFirstName"
          params:
            column: "prenom"
        - name: "Json"
          params:
            column: "telephone"
            operations:
              - operation: "set"
                path: "countryCode"
                value: "fr"
              - operation: "set"
                path: "numero"
                value: ""
        - name: "SetNull"
          params:
            column: "pinnedNote"
        - name: "RandomLastName"
          params:
            column: "nom"
        - name: "RandomLastName"
          params:
            column: "surnom"
            keep_null: true
        - name: "RealAddress"
          params:
            columns:
              - name: "villeNaissance"
                template: "{{.City}}"
        - name: "Json"
          params:
            column: "decision"
            operations: 
              - operation: "set"
                path: "motifDetails"
                value: null
              - operation: set
                path: orientationDetails
                value: null
              - operation: set
                path: userName
                value_template: "{{ quote fakerName }}"
              - operation: set
                path: userId
                value_template: "{{ randomInt 0 1000000000}}"
              - operation: set
                path: uuid
                value_template: "{{ quote fakerUUID }}"

        - name: "TemplateRecord"
          params:
            columns:
              - "ayantsDroits"
            template: >
              {{ $val := .GetColumnValue "ayantsDroits" }}
              {{ $newPeople := list }}
              {{ if isNotNull $val }}
                {{ range $val }}
                  {{ $modifiedPerson := dict "lien" .lien "prenom" fakerFirstName "nom" fakerFirstLastName "dateNaissance" .dateNaissance }}
                  {{ $newPeople = append $newPeople $modifiedPerson }}
                {{ end }}
                {{ $updatedValue := toJson $newPeople }}
                {{ .SetColumnValue "ayantsDroits" $updatedValue }}
              {{ end }}
        - name: "Replace"
          params:
            column: "migrated"
            value: true
            keep_null: false