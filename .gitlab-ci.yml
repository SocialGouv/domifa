include:
  # docker build + push: https://github.com/SocialGouv/gitlab-ci-yml/blob/v22.0.0/base_register_docker_stage.yml
  - project: SocialGouv/gitlab-ci-yml
    file: /base_autodevops.yml
    ref: v22.1.9

variables:
  # Globals
  AUTO_DEVOPS_ENABLE_KAPP: "üïπÔ∏è"

stages:
  - Release
  - Deploy
  - Seed

Review:
  extends: .autodevops_review
  rules:
    - if: "$PRODUCTION || $RELEASE || $CI_COMMIT_TAG"
      when: never
    - if: "$DEPLOY"
      when: always
    - when: never

Notify Starting Deployment:
  extends: .autodevops_notify_starting_deployment
  rules:
    - if: "$RELEASE"
      when: never
    - if: "$AUTO_DEVOPS_NOTIFY_DISABLED"
      when: never
    - if: "$DEPLOY"
      when: always
    - when: never

Notify Fail:
  extends: .autodevops_notify_fail
  rules:
    - if: "$RELEASE"
      when: never
    - if: "$AUTO_DEVOPS_NOTIFY_DISABLED"
      when: never
    - if: "$DEPLOY"
      when: on_failure
    - when: never

Notify Success:
  extends: .autodevops_notify_success
  rules:
    - if: "$RELEASE"
      when: never
    - if: "$AUTO_DEVOPS_NOTIFY_DISABLED"
      when: never
    - if: "$DEPLOY"
      when: on_success
    - when: never

Stop review:
  rules:
    - if: "$PRODUCTION || $RELEASE || $CI_COMMIT_TAG"
      when: never
    - if: "$DEPLOY"
      when: manual
    - when: never

Seed:
  stage: Seed
  # allow_failure: true
  image:
    name: postgres:11
    entrypoint: [""]
  environment:
    name: ${CI_COMMIT_REF_NAME}-dev2
    url: https://${CI_ENVIRONMENT_SLUG}-${CI_PROJECT_NAME}.${KUBE_INGRESS_BASE_DOMAIN}
  retry: 2
  rules:
    - if: "$RELEASE"
      when: never
    - if: "$AUTO_DEVOPS_NOTIFY_DISABLED"
      when: never
    - if: "$DEPLOY"
      when: always
    - when: never
  variables:
    PGSSLMODE: require
    GIT_STRATEGY: clone
    PGPASSWORD: password_${CI_COMMIT_SHORT_SHA}
    PGDATABASE: autodevops_${CI_COMMIT_SHORT_SHA}
    PGUSER: user_${CI_COMMIT_SHORT_SHA}@${PGHOST}
    PGHOST: domifadevserver.postgres.database.azure.com
  script:
    - psql < ./_scripts/db/dumps/domifa_test.postgres.data-only.sql
